# CompilerName=msvcpp160
# Mode=debug
ninja_required_version = 1.3

# Basic folders
root = .
builddir = $root\build\win64
matlabdir = C:\Program Files\MATLAB\R2021a
startdir = E:\Memristive-Seizure-Detection-and-Prediction-by-Parallel-Convolutional-Neural-Networks\MATLAB Simulations

# Toolchain information
cc = cl
cxx = cl
linker = link
linkerxx = link

cflags =  /c /Zp8 /GR /W3 /EHs /nologo /MD /D_CRT_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE /D_SECURE_SCL=0   /DMATLAB_MEX_FILE  /DMATLAB_MEX_FILE /Z7 /source-charset:utf-8 /I "$root" /I "$startdir" /I "$root\CXSparse\Include" /I "$root\CXSparse\SuiteSparse_config" /I "$root\CXSparse\CXSparseSupport" /I "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\bin\Hostx64\x64" /I "$root\interface" /I "$matlabdir\extern\include" /I "." -DMODEL=inference_routine_mex -DMW_NEEDS_VERSION_H /wd4251 

cxxflags =   /c /Zp8 /GR /W3 /EHs /nologo /MD /D_CRT_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE /D_SECURE_SCL=0   /DMATLAB_MEX_FILE  /DMATLAB_MEX_FILE /Z7 /source-charset:utf-8 /I "$root" /I "$startdir" /I "$root\CXSparse\Include" /I "$root\CXSparse\SuiteSparse_config" /I "$root\CXSparse\CXSparseSupport" /I "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\bin\Hostx64\x64" /I "$root\interface" /I "$matlabdir\extern\include" /I "." -DMODEL=inference_routine_mex -DMW_NEEDS_VERSION_H /wd4251 

ldflags =  /nologo /manifest   /DLL /LIBPATH:"$matlabdir\extern\lib\win64\microsoft" libmx.lib libmex.lib libmat.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib libMatlabDataArray.lib libMatlabEngine.lib  /out:"inference_routine_mex.mexw64" /debug /PDB:"inference_routine_mex.mexw64.pdb" libemlrt.lib libcovrt.lib libut.lib libmwmathutil.lib 

# Build Rules
rule cc
    command = $cc $cflags $in /Fo$out

rule cxx
    command = $cxx $cxxflags $in /Fo$out

rule link
    command = $linker @$out.rsp $ldflags
    rspfile = $out.rsp
    rspfile_content = $in

rule linkxx
    command = $linkerxx $in $ldflags

# Build
build $builddir\cs_ri_bundle.obj : cxx $root\CXSparse\Source\cs_ri_bundle.cpp
build $builddir\cs_ci_bundle.obj : cxx $root\CXSparse\Source\cs_ci_bundle.cpp
build $builddir\solve_from_lu.obj : cxx $root\CXSparse\CXSparseSupport\solve_from_lu.cpp
build $builddir\solve_from_qr.obj : cxx $root\CXSparse\CXSparseSupport\solve_from_qr.cpp
build $builddir\makeCXSparseMatrix.obj : cxx $root\CXSparse\CXSparseSupport\makeCXSparseMatrix.cpp
build $builddir\unpackCXStruct.obj : cxx $root\CXSparse\CXSparseSupport\unpackCXStruct.cpp
build $builddir\inference_routine_data.obj : cxx $root\inference_routine_data.cpp
build $builddir\rt_nonfinite.obj : cxx $root\rt_nonfinite.cpp
build $builddir\inference_routine_initialize.obj : cxx $root\inference_routine_initialize.cpp
build $builddir\inference_routine_terminate.obj : cxx $root\inference_routine_terminate.cpp
build $builddir\inference_routine.obj : cxx $root\inference_routine.cpp
build $builddir\rand.obj : cxx $root\rand.cpp
build $builddir\voltage_deg_model_sparse_conductance.obj : cxx $root\voltage_deg_model_sparse_conductance.cpp
build $builddir\sparse.obj : cxx $root\sparse.cpp
build $builddir\eml_int_forloop_overflow_check.obj : cxx $root\eml_int_forloop_overflow_check.cpp
build $builddir\warning.obj : cxx $root\warning.cpp
build $builddir\sumMatrixIncludeNaN.obj : cxx $root\sumMatrixIncludeNaN.cpp
build $builddir\sum.obj : cxx $root\sum.cpp
build $builddir\_coder_inference_routine_api.obj : cxx $root\interface\_coder_inference_routine_api.cpp
build $builddir\_coder_inference_routine_mex.obj : cxx $root\interface\_coder_inference_routine_mex.cpp
build $builddir\introsort.obj : cxx $root\introsort.cpp
build $builddir\insertionsort.obj : cxx $root\insertionsort.cpp
build $builddir\heapsort.obj : cxx $root\heapsort.cpp
build $builddir\round.obj : cxx $root\round.cpp
build $builddir\sparse1.obj : cxx $root\sparse1.cpp
build $builddir\stack1.obj : cxx $root\stack1.cpp
build $builddir\_coder_inference_routine_info.obj : cxx $root\interface\_coder_inference_routine_info.cpp
build $builddir\cpp_mexapi_version.obj : cxx $matlabdir\extern\version\cpp_mexapi_version.cpp

# Link
build $root\inference_routine_mex.mexw64 : linkxx $builddir\cs_ri_bundle.obj $builddir\cs_ci_bundle.obj $builddir\solve_from_lu.obj $builddir\solve_from_qr.obj $builddir\makeCXSparseMatrix.obj $builddir\unpackCXStruct.obj $builddir\inference_routine_data.obj $builddir\rt_nonfinite.obj $builddir\inference_routine_initialize.obj $builddir\inference_routine_terminate.obj $builddir\inference_routine.obj $builddir\rand.obj $builddir\voltage_deg_model_sparse_conductance.obj $builddir\sparse.obj $builddir\eml_int_forloop_overflow_check.obj $builddir\warning.obj $builddir\sumMatrixIncludeNaN.obj $builddir\sum.obj $builddir\_coder_inference_routine_api.obj $builddir\_coder_inference_routine_mex.obj $builddir\introsort.obj $builddir\insertionsort.obj $builddir\heapsort.obj $builddir\round.obj $builddir\sparse1.obj $builddir\stack1.obj $builddir\_coder_inference_routine_info.obj $builddir\cpp_mexapi_version.obj 
